name: X86_64 OpenWrt

on:
  push:
    branches: 
      - master

env:
  SSH_ACTIONS: true
  TZ: Asia/Shanghai

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: 初始化环境
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get update
          sudo -E apt-get -y install bc build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          
      - name: 下载代码更新配置
        run: |
          git clone https://github.com/coolsnowwolf/lede
          cp config.txt lede/.config
          cp default.txt lede/package/lean/default-settings/files/zzz-default-settings

      - name: 准备编译文件
        run: |
          cd lede
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          make defconfig

      - name: SSH connection to Actions
        uses: P3TERX/debugger-action@master
        if: env.SSH_ACTIONS == 'true'

      - name: make download
        run: |
          cd lede
          make download -j32
          find dl -size -1024c -exec rm -f {} \;
          
      - name: 编译
        run: |
          cd lede
          make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin
      
      - name: Prepare artifact
        run: |
          cd lede
          find ./bin/targets/ -type d -name "packages" | xargs rm -rf {}
          find . -type f -name '*rootfs*' -exec rm -f {} \;

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt firmware
          path: ./lede/bin/targets/
